// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace TSLTestGenerator.Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System.Security.Permissions;
    using TSLTestGenerator.DataModel;
    using TSLTestGenerator.Templates;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class FieldTestCodeTemplate : FieldTestCodeTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 9 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

// this method returns an action to generate assert statements for later use
private Action GenerateTestCodeForField(TestCodeGeneratorContext context, TSLStruct struct_, TSLField field, string writerVarName)
{
    Action assertAction;
    switch (field.Type.FieldType)
    {
        case TSLFieldTypes.Enum:
            assertAction = GenerateTestCodeForEnumField(context, struct_, field, writerVarName);
            break;
        case TSLFieldTypes.Array:
            assertAction = GenerateTestCodeForArrayField(context, struct_, field, writerVarName);
            break;
        case TSLFieldTypes.Atom:
            assertAction = GenerateTestCodeForAtomField(context, struct_, field, writerVarName);
            break;
        case TSLFieldTypes.List:
            assertAction = GenerateTestCodeForListField(context, struct_, field, writerVarName);
            break;
        case TSLFieldTypes.Struct:
            assertAction = GenerateTestCodeForStructField(context, struct_, field, writerVarName);
            break;
        default:
            throw new NotImplementedException();
    }
    assertAction?.Invoke();
    return assertAction;
}

        
        #line default
        #line hidden
        
        #line 39 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

private Action GenerateTestCodeForEnumField(TestCodeGeneratorContext context, TSLStruct struct_, TSLField field, string writerVarName)
{
    var fieldType = (TSLEnum)field.Type;
    var randomMember = fieldType.Members.Choice(context.MasterRandom);
    var enumMember = $"{fieldType.Name}.{randomMember.Key}";
    var structMember = $"{writerVarName}.{field.Name}";

        
        #line default
        #line hidden
        
        #line 46 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("\r\n            ");

        
        #line default
        #line hidden
        
        #line 48 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture($"{structMember} = {enumMember};"));

        
        #line default
        #line hidden
        
        #line 48 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("\r\n");

        
        #line default
        #line hidden
        
        #line 49 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
 return () =>
    {

        
        #line default
        #line hidden
        
        #line 51 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("            Assert.That(");

        
        #line default
        #line hidden
        
        #line 52 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(structMember));

        
        #line default
        #line hidden
        
        #line 52 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 52 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(enumMember));

        
        #line default
        #line hidden
        
        #line 52 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n            Assert.That(");

        
        #line default
        #line hidden
        
        #line 53 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture($"(({struct_.Name}){writerVarName}).{field.Name}"));

        
        #line default
        #line hidden
        
        #line 53 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 53 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(enumMember));

        
        #line default
        #line hidden
        
        #line 53 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n            Assert.That(");

        
        #line default
        #line hidden
        
        #line 54 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture($"((new {struct_.Name}Reader({writerVarName}.CellPtr, 0)){writerVarName}).{field.Name}"));

        
        #line default
        #line hidden
        
        #line 54 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 54 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(enumMember));

        
        #line default
        #line hidden
        
        #line 54 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n\r\n            Assert.That((int)");

        
        #line default
        #line hidden
        
        #line 56 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(structMember));

        
        #line default
        #line hidden
        
        #line 56 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 56 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(randomMember.Value));

        
        #line default
        #line hidden
        
        #line 56 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n            Assert.That((int)");

        
        #line default
        #line hidden
        
        #line 57 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture($"(({struct_.Name}){writerVarName}).{field.Name}"));

        
        #line default
        #line hidden
        
        #line 57 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 57 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(randomMember.Value));

        
        #line default
        #line hidden
        
        #line 57 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n            Assert.That((int)");

        
        #line default
        #line hidden
        
        #line 58 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture($"((new {struct_.Name}Reader({writerVarName}.CellPtr, 0)){writerVarName}).{field.Name}"));

        
        #line default
        #line hidden
        
        #line 58 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 58 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(randomMember.Value));

        
        #line default
        #line hidden
        
        #line 58 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n");

        
        #line default
        #line hidden
        
        #line 59 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

    };
}

        
        #line default
        #line hidden
        
        #line 64 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

private Action GenerateTestCodeForArrayField(TestCodeGeneratorContext context, TSLStruct struct_, TSLField field, string writerVarName)
{
    var fieldType = (ArrayType)field.Type;
    var randomArray = fieldType.GetRandomValue(context.MasterRandom);
    var parentMember = $"{writerVarName}.{field.Name}";
    var tempVarName = $"structFieldTestValue{++context.GeneratedCount}";

        
        #line default
        #line hidden
        
        #line 71 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("        var ");

        
        #line default
        #line hidden
        
        #line 72 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 72 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 72 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(randomArray));

        
        #line default
        #line hidden
        
        #line 72 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(";\r\n        ");

        
        #line default
        #line hidden
        
        #line 73 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parentMember));

        
        #line default
        #line hidden
        
        #line 73 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 73 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 73 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 74 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

    return () =>
    {

        
        #line default
        #line hidden
        
        #line 77 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("        Assert.That(");

        
        #line default
        #line hidden
        
        #line 78 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parentMember));

        
        #line default
        #line hidden
        
        #line 78 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 78 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 78 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n        Assert.That(");

        
        #line default
        #line hidden
        
        #line 79 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture($"(({struct_.Name}){writerVarName}).{field.Name}"));

        
        #line default
        #line hidden
        
        #line 79 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 79 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 79 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n        Assert.That(");

        
        #line default
        #line hidden
        
        #line 80 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture($"((new {struct_.Name}Reader({writerVarName}.CellPtr, 0)){writerVarName}).{field.Name}"));

        
        #line default
        #line hidden
        
        #line 80 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 80 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 80 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n");

        
        #line default
        #line hidden
        
        #line 81 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

    };
}

        
        #line default
        #line hidden
        
        #line 86 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

private Action GenerateTestCodeForAtomField(TestCodeGeneratorContext context, TSLStruct struct_, TSLField field, string writerVarName)
{
    var fieldType = (AtomType)field.Type;
    var randomValue = fieldType.GetRandomValue(context.MasterRandom);
    var parentMember = $"{writerVarName}.{field.Name}";
    var tempVarName = $"structFieldTestValue{++context.GeneratedCount}";

        
        #line default
        #line hidden
        
        #line 93 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("        var ");

        
        #line default
        #line hidden
        
        #line 94 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 94 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 94 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(randomValue));

        
        #line default
        #line hidden
        
        #line 94 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(";\r\n        ");

        
        #line default
        #line hidden
        
        #line 95 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parentMember));

        
        #line default
        #line hidden
        
        #line 95 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 95 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 95 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 96 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

    return () =>
    {

        
        #line default
        #line hidden
        
        #line 99 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("        Assert.That(");

        
        #line default
        #line hidden
        
        #line 100 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parentMember));

        
        #line default
        #line hidden
        
        #line 100 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 100 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 100 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n        Assert.That(");

        
        #line default
        #line hidden
        
        #line 101 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture($"(({struct_.Name}){writerVarName}).{field.Name}"));

        
        #line default
        #line hidden
        
        #line 101 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 101 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 101 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n        Assert.That(");

        
        #line default
        #line hidden
        
        #line 102 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture($"((new {struct_.Name}Reader({writerVarName}.CellPtr, 0)){writerVarName}).{field.Name}"));

        
        #line default
        #line hidden
        
        #line 102 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 102 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 102 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n");

        
        #line default
        #line hidden
        
        #line 103 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

    };
}

        
        #line default
        #line hidden
        
        #line 108 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

private Action GenerateTestCodeForListField(TestCodeGeneratorContext context, TSLStruct struct_, TSLField field, string writerVarName)
{
    var fieldType = (ListType)field.Type;
    var randomValue = fieldType.GetRandomValue(context.MasterRandom);
    var parentMember = $"{writerVarName}.{field.Name}";
    var tempVarName = $"structFieldTestValue{++context.GeneratedCount}";

        
        #line default
        #line hidden
        
        #line 115 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("        var ");

        
        #line default
        #line hidden
        
        #line 116 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 116 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 116 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(randomValue));

        
        #line default
        #line hidden
        
        #line 116 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(";\r\n        ");

        
        #line default
        #line hidden
        
        #line 117 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parentMember));

        
        #line default
        #line hidden
        
        #line 117 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 117 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 117 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 118 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

    return () =>
    {

        
        #line default
        #line hidden
        
        #line 121 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("        Assert.That(");

        
        #line default
        #line hidden
        
        #line 122 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parentMember));

        
        #line default
        #line hidden
        
        #line 122 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 122 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 122 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n        Assert.That(");

        
        #line default
        #line hidden
        
        #line 123 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture($"(({struct_.Name}){writerVarName}).{field.Name}"));

        
        #line default
        #line hidden
        
        #line 123 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 123 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 123 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n        Assert.That(");

        
        #line default
        #line hidden
        
        #line 124 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture($"((new {struct_.Name}Reader({writerVarName}.CellPtr, 0)){writerVarName}).{field.Name}"));

        
        #line default
        #line hidden
        
        #line 124 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(", Is.EqualTo(");

        
        #line default
        #line hidden
        
        #line 124 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 124 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("));\r\n");

        
        #line default
        #line hidden
        
        #line 125 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

    };
}

        
        #line default
        #line hidden
        
        #line 130 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

private Action GenerateTestCodeForStructField(TestCodeGeneratorContext context, TSLStruct struct_, TSLField field, string writerVarName)
{
    //var fieldType = (TSLStruct)field.Type;
    //var randomStruct = fieldType.GetRandomValue(context.MasterRandom);
    //var parentMember = $"{writerVarName}.{field.Name}";
    //var tempVarName = $"structFieldTestValue{++context.GeneratedCount}";
    //var structVarName = $"structFieldTestStruct{++context.GeneratedCount}";
    //var readerVarName = $"structFieldTestReader{++context.GeneratedCount}";

        
        #line default
        #line hidden
        
        #line 139 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write("\r\n        //");

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fieldType.Name));

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(randomStruct));

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(";\r\n        //");

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parentMember));

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tempVarName));

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 143 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

    //Action writerAndStructComp = GenerateStructComparisonCode(struct_, writerVarName, tempVarName);
    //Action readerAndStructComp = GenerateStructComparisonCode(struct_, readerVarName, tempVarName);
    //return () =>
    //{
    //    // TODO(leasunhy): add test code

        
        #line default
        #line hidden
        
        #line 150 "C:\Users\v-siyul.FAREAST\documents\visual studio 2017\Projects\TSLTestGenerator\TSLTestGenerator\Templates\FieldTestCodeTemplate.tt"

    //};
    return () => {};
}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class FieldTestCodeTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
